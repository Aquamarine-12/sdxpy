- key: automatic_variable
  en:
    term: automatic variable
    def: >
      A variable that is automatically given a value in a [build
      rule](#build_rule). For example, Make automatically assigns the name of a
      rule's [target](#build_target) to the automatic variable `$@`. Automatic
      variables are frequently used when writing [pattern rules](#pattern_rule).

- key: authentication
  en:
    term: authentication
    def: >
      The process of establishing identity.
      Authentication relies on something someone knows (such as a password),
      something they have (such as a key card),
      or something they are (such as a fingerprint).

- key: minimum_testable_class
  en:
    term: minimum testable class
    def: >
      The simplest extension to an [abstract class](#abstract_class)
      that can actually be used,
      particularly in tests.

- key: named_tuple
  en:
    term: named tuple
    def: >
      A tuple whose fields can be accessed by name as well as by location.
      Named tuples are used to implement records
      that don't have any associated [methods](#method).

- key: open_page
  en:
    term: open page
    def: >
      The [page](#page) that a database is currently adding data to.

- key: pattern_rule
  en:
    term: pattern rule (in build)
    def: >
      A generic [build rule](#build_rule) that describes how to update any file
      whose name matches a pattern. Pattern rules often use [automatic
      variables](#automatic_variable) to represent the actual filenames.

- key: placeholder_file
  en:
    term: placeholder file
    def: >
      A file stored in place of some other file (such as a large dataset)
      that contains [metadata](#metadata) about that other file.

- key: precedence
  en:
    term: precedence
    def: >
      The priority of an operation. For example, multiplication has a higher
      precedence than addition, so `a+b*c` is read as "the sum of `a` with the
      product of `b` and `c`".

- key: regression
  en:
    term: regression
    def: >
      A change that breaks something that used to work.

- key: thrashing
  en:
    term: thrashing
    def: >
      A situation in which a program or the operating system
      repeatedly flushes data to disk, only to re-read it immediately,
      or repeatedly switches between tasks without making progress on any of them.

- key: turing_machine
  en:
    term: Turing Machine
    def: >
      A theoretical model of computation that manipulates symbols on an infinite
      tape according to a fixed table of rules. Any computation that can be
      expressed as an algorithm can be done by a Turing Machine.

- key: unparsing
  en:
    term: unparsing
    def: >
      Converting an [abstract syntax tree](#abstract_syntax_tree) back into source code.

- key: well_formed
  en:
    term: well-formed
    def: >
      A piece of text that obeys the rules of a formal grammar is said to be
      well formed.
