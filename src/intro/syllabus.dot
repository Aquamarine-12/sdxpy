digraph syllabus {
  node [fontname = Verdana, fontsize = 9, shape = box, style = filled];
  rankdir = RL;
  edge [dir = "back"];

  subgraph syllabus {
    archive [label = "file\narchiver", fillcolor = cornsilk];
    binary [label = "binary\ndata", fillcolor = cornsilk];
    build [label = "build\nmanager", fillcolor = cornsilk];
    cache [label = "file cache", fillcolor = cornsilk];
    check [label = "checking\nHTML", fillcolor = aquamarine];
    db [label = "key-value\nstore", fillcolor = cornsilk];
    df [label = "dataframe\noperations", fillcolor = cornsilk];
    dup [label = "duplicate\nfile finder", fillcolor = aquamarine];
    interp [label = "interpreting\nexpressions", fillcolor = aquamarine];
    lint [label = "linting", fillcolor = pink];
    meta [label = "meta-\nprogramming", fillcolor = cornsilk];
    mock [label = "mock\nobjects", fillcolor = cornsilk];
    pack [label = "package\nmanager", fillcolor = pink];
    parse [label = "parsing\ntext", fillcolor = pink];
    perf [label = "performance\nprofiling", fillcolor = cornsilk];
    persist [label = "object\npersistence", fillcolor = aquamarine];
    pipe [label = "pipeline\nrunner", fillcolor = cornsilk];
    plot [label = "plotting\ngraphs", fillcolor = cornsilk];
    re [label = "match\nregex", fillcolor = aquamarine];
    server [label = "web\nserver", fillcolor = aquamarine];
    ssg [label = "static site\ngenerator", fillcolor = pink];
    template [label = "HTML\ntemplates", fillcolor = cornsilk];
    test [label = "unit\ntesting", fillcolor = cornsilk];

    archive -> {dup, mock, re};
    binary -> {persist};
    build -> {pipe, plot};
    cache -> {archive};
    db -> {binary};
    df -> perf;
    lint -> {check};
    meta -> {mock};
    mock -> {test};
    pack -> {build};
    parse -> {re};
    perf -> {meta};
    pipe -> {cache, df};
    plot -> {df};
    ssg -> {build, db, server, template}
    template -> {check, interp};
    test -> {dup};
  }

  subgraph cluster_legend {
    rankdir = LR;
    source [label = "source", fillcolor = aquamarine];
    flow [label = "flow", fillcolor = cornsilk];
    sink [label = "sink", fillcolor = pink];
    sink -> flow -> source;
  }
}
