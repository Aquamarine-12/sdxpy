digraph syllabus {
  node [fontname = Verdana, fontsize = 9, shape = box, style = filled];
  rankdir = RL;
  edge [dir = "back"];

  archive [label = "file\narchiver", fillcolor = cornsilk];
  binary [label = "binary\ndata", fillcolor = cornsilk];
  build [label = "build\nmanager", fillcolor = cornsilk];
  cache [label = "file cache", fillcolor = cornsilk];
  check [label = "checking\nHTML", fillcolor = aquamarine];
  db [label = "database", fillcolor = pink];
  dup [label = "duplicate\nfile finder", fillcolor = aquamarine];
  editor [label = "text\neditor", fillcolor = aquamarine];
  flow [label = "workflow\nrunner", fillcolor = pink];
  func [label = "function def\n& call stack", fillcolor = cornsilk];
  glob [label = "match\npatterns", fillcolor = cornsilk];
  install [label = "installer", fillcolor = pink];
  interp [label = "interpreting\nexpressions", fillcolor = cornsilk];
  lint [label = "linting", fillcolor = pink];
  meta [label = "meta-\nprogramming", fillcolor = cornsilk];
  mock [label = "mock\nobjects", fillcolor = cornsilk];
  oop [label = "class and\nobjects", fillcolor = aquamarine];
  pack [label = "package\nmanager", fillcolor = cornsilk];
  parse [label = "parsing\ntext", fillcolor = cornsilk];
  perf [label = "performance\nprofiling", fillcolor = cornsilk];
  persist [label = "object\npersistence", fillcolor = cornsilk];
  plot [label = "plotting\ngraphs", fillcolor = aquamarine];
  server [label = "web\nserver", fillcolor = aquamarine];
  ssg [label = "static site\ngenerator", fillcolor = pink];
  template [label = "HTML\ntemplates", fillcolor = cornsilk];
  test [label = "unit\ntesting", fillcolor = cornsilk];
  undo [label = "undo and\nredo", fillcolor = cornsilk];

  archive -> {mock, glob};
  binary -> {dup};
  build -> {plot};
  cache -> {archive, server};
  db -> {binary, persist};
  flow -> {build};
  func -> {interp};
  glob -> {test};
  install -> {pack, template, undo};
  interp -> {meta};
  lint -> {check};
  meta -> {oop};
  mock -> {meta, test};
  parse -> {glob};
  perf -> {meta};
  persist -> {parse};
  ssg -> {build, check, template}
  template -> {check, func};
  test -> {dup};
  undo -> {editor};

  /*
  subgraph cluster_legend {
    source [label = "source", fillcolor = aquamarine];
    flow [label = "flow", fillcolor = cornsilk];
    sink [label = "sink", fillcolor = pink];
    sink -> flow -> source;
  }
  */
}
